function floatToString(t, r) {
    var o = t.toFixed(r).toString();
    return o.match(/^\.\d+/) ? "0" + o : o
}

function attributeToString(t) {
    return "string" != typeof t && "undefined" == (t += "") && (t = ""), jQuery.trim(t)
}

void 0 === window.Shopify && (window.Shopify = {}), Shopify.money_format = "${{amount}}", Shopify.onError = function (t, r) {
    var e = eval("(" + t.responseText + ")");
    e.message ? alert(e.message + "(" + e.status + "): " + e.description) : alert("Error : " + Shopify.fullMessagesFromErrors(e).join("; ") + ".")
}, Shopify.fullMessagesFromErrors = function (t) {
    var e = [];
    return jQuery.each(t, function (o, t) {
        jQuery.each(t, function (t, r) {
            e.push(o + " " + r)
        })
    }), e
}, Shopify.onCartUpdate = function (t) {
    alert("There are now " + t.item_count + " items in the cart.")
}, Shopify.onCartShippingRatesUpdate = function (t, r) {
    var o = "";
    r.zip && (o += r.zip + ", "), r.province && (o += r.province + ", "), o += r.country, alert("There are " + t.length + " shipping rates available for " + o + ", starting at " + Shopify.formatMoney(t[0].price) + ".")
}, Shopify.onItemAdded = function (t) {
    alert(t.title + " was added to your shopping cart.")
}, Shopify.onProduct = function (t) {
    alert("Received everything we ever wanted to know about " + t.title)
}, Shopify.formatMoney = function (t, r) {
    return "string" == typeof t && (t = t.replace(",", "")), t.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
}, Shopify.resizeImage = function (t, r) {
    try {
        if ("original" == r) return t;
        var o = t.match(/(.*\/[\w\-\_\.]+)\.(\w{2,4})/);
        return o[1] + "_" + r + "." + o[2]
    } catch (r) {
        return t
    }
}, Shopify.addItem = function (t, r, o) {
    var e = {
        type: "POST",
        url: "/cart/add.js",
        data: "quantity=" + (r = r || 1) + "&id=" + t,
        dataType: "json",
        success: function (t) {
            "function" == typeof o ? o(t) : Shopify.onItemAdded(t)
        },
        error: function (t, r) {
            Shopify.onError(t, r)
        }
    };
    jQuery.ajax(e)
}, Shopify.addItemFromForm = function (t, r) {
    var o = {
        type: "POST",
        url: "/cart/add.js",
        data: jQuery("#" + t).serialize(),
        dataType: "json",
        success: function (t) {
            "function" == typeof r ? r(t) : Shopify.onItemAdded(t)
        },
        error: function (t, r) {
            Shopify.onError(t, r)
        }
    };
    jQuery.ajax(o)
}, Shopify.getCart = function (r) {
    jQuery.getJSON("/cart.js", function (t) {
        "function" == typeof r ? r(t) : Shopify.onCartUpdate(t)
    })
}, Shopify.pollForCartShippingRatesForDestination = function (e, n, t) {
    t = t || Shopify.onError;
    var a = function () {
        jQuery.ajax("/cart/async_shipping_rates", {
            dataType: "json", success: function (t, r, o) {
                200 === o.status ? "function" == typeof n ? n(t.shipping_rates, e) : Shopify.onCartShippingRatesUpdate(t.shipping_rates, e) : setTimeout(a, 500)
            }, error: t
        })
    };
    return a
}, Shopify.getCartShippingRatesForDestination = function (t, r, o) {
    o = o || Shopify.onError;
    var e = {
        type: "POST",
        url: "/cart/prepare_shipping_rates",
        data: Shopify.param({shipping_address: t}),
        success: Shopify.pollForCartShippingRatesForDestination(t, r, o),
        error: o
    };
    jQuery.ajax(e)
}, Shopify.getProduct = function (t, r) {
    jQuery.getJSON("/products/" + t + ".js", function (t) {
        "function" == typeof r ? r(t) : Shopify.onProduct(t)
    })
}, Shopify.changeItem = function (t, r, o) {
    var e = {
        type: "POST",
        url: "/cart/change.js",
        data: "quantity=" + r + "&id=" + t,
        dataType: "json",
        success: function (t) {
            "function" == typeof o ? o(t) : Shopify.onCartUpdate(t)
        },
        error: function (t, r) {
            Shopify.onError(t, r)
        }
    };
    jQuery.ajax(e)
}, Shopify.removeItem = function (t, r) {
    var o = {
        type: "POST", url: "/cart/change.js", data: "quantity=0&id=" + t, dataType: "json", success: function (t) {
            "function" == typeof r ? r(t) : Shopify.onCartUpdate(t)
        }, error: function (t, r) {
            Shopify.onError(t, r)
        }
    };
    jQuery.ajax(o)
}, Shopify.clear = function (r) {
    var t = {
        type: "POST", url: "/cart/clear.js", data: "", dataType: "json", success: function (t) {
            "function" == typeof r ? r(t) : Shopify.onCartUpdate(t)
        }, error: function (t, r) {
            Shopify.onError(t, r)
        }
    };
    jQuery.ajax(t)
}, Shopify.updateCartFromForm = function (t, r) {
    var o = {
        type: "POST",
        url: "/cart/update.js",
        data: jQuery("#" + t).serialize(),
        dataType: "json",
        success: function (t) {
            "function" == typeof r ? r(t) : Shopify.onCartUpdate(t)
        },
        error: function (t, r) {
            Shopify.onError(t, r)
        }
    };
    jQuery.ajax(o)
}, Shopify.updateCartAttributes = function (t, r) {
    var e = "";
    jQuery.isArray(t) ? jQuery.each(t, function (t, r) {
        var o = attributeToString(r.key);
        "" !== o && (e += "attributes[" + o + "]=" + attributeToString(r.value) + "&")
    }) : "object" == typeof t && null !== t && jQuery.each(t, function (t, r) {
        e += "attributes[" + attributeToString(t) + "]=" + attributeToString(r) + "&"
    });
    var o = {
        type: "POST", url: "/cart/update.js", data: e, dataType: "json", success: function (t) {
            "function" == typeof r ? r(t) : Shopify.onCartUpdate(t)
        }, error: function (t, r) {
            Shopify.onError(t, r)
        }
    };
    jQuery.ajax(o)
}, Shopify.updateCartNote = function (t, r) {
    var o = {
        type: "POST",
        url: "/cart/update.js",
        data: "note=" + attributeToString(t),
        dataType: "json",
        success: function (t) {
            "function" == typeof r ? r(t) : Shopify.onCartUpdate(t)
        },
        error: function (t, r) {
            Shopify.onError(t, r)
        }
    };
    jQuery.ajax(o)
}, "1.4" <= jQuery.fn.jquery ? Shopify.param = jQuery.param : (Shopify.param = function (t) {
    var o = [], r = function (t, r) {
        r = jQuery.isFunction(r) ? r() : r, o[o.length] = encodeURIComponent(t) + "=" + encodeURIComponent(r)
    };
    if (jQuery.isArray(t) || t.jquery) jQuery.each(t, function () {
        r(this.name, this.value)
    }); else for (var e in t) Shopify.buildParams(e, t[e], r);
    return o.join("&").replace(/%20/g, "+")
}, Shopify.buildParams = function (o, t, e) {
    jQuery.isArray(t) && t.length ? jQuery.each(t, function (t, r) {
        rbracket.test(o) ? e(o, r) : Shopify.buildParams(o + "[" + ("object" == typeof r || jQuery.isArray(r) ? t : "") + "]", r, e)
    }) : null != t && "object" == typeof t ? Shopify.isEmptyObject(t) ? e(o, "") : jQuery.each(t, function (t, r) {
        Shopify.buildParams(o + "[" + t + "]", r, e)
    }) : e(o, t)
}, Shopify.isEmptyObject = function (t) {
    for (var r in t) return !1;
    return !0
});
